{
  "initialize_quotes": "CREATE TABLE IF NOT EXISTS quotes (id INT AUTO_INCREMENT PRIMARY KEY, content TEXT NOT NULL)",
  "initialize_riddles": "CREATE TABLE IF NOT EXISTS riddles (id INT AUTO_INCREMENT PRIMARY KEY, question TEXT NOT NULL, answer TEXT NOT NULL)",
  "create_stats": "CREATE TABLE IF NOT EXISTS api_stats (id INT AUTO_INCREMENT PRIMARY KEY, endpoint VARCHAR(255) UNIQUE, count INT DEFAULT 0, last_accessed TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)",
  "get_quote": "SELECT * FROM quotes ORDER BY RAND() LIMIT 1",
  "get_riddle": "SELECT * FROM riddles ORDER BY RAND() LIMIT 1",
  "update_stats": "INSERT INTO api_stats (endpoint, count) VALUES (?, 1) ON DUPLICATE KEY UPDATE count = count + 1",
  "get_stats": "SELECT endpoint, count, last_accessed FROM api_stats ORDER BY last_accessed DESC",
  "create_access_logs": "CREATE TABLE IF NOT EXISTS access_logs (id INT AUTO_INCREMENT PRIMARY KEY, ip VARCHAR(45) NOT NULL, access_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP, endpoint VARCHAR(255) NOT NULL)",
  "create_ip_locations": "CREATE TABLE IF NOT EXISTS ip_locations (id INT AUTO_INCREMENT PRIMARY KEY, ip VARCHAR(45) NOT NULL UNIQUE, province VARCHAR(50) NOT NULL, update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)",
  "log_access": "INSERT INTO access_logs (ip, endpoint) VALUES (?, ?)",
  "get_access_stats": "SELECT ip, access_time, endpoint FROM access_logs WHERE endpoint != '/stats' ORDER BY access_time DESC",
  "save_location": "INSERT INTO ip_locations (ip, province) VALUES (?, ?) ON DUPLICATE KEY UPDATE province = VALUES(province), update_time = CURRENT_TIMESTAMP"
}